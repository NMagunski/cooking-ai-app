#!/bin/bash

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ç–∞ frontend —Å—ä—â–µ—Å—Ç–≤—É–≤–∞
if [ -d "frontend" ]; then
  echo "‚ö†Ô∏è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è 'frontend' –≤–µ—á–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞. –ò–∑—Ç—Ä–∏–π—Ç–µ —è –∏–ª–∏ –ø—Ä–µ–∏–º–µ–Ω—É–≤–∞–π—Ç–µ –ø—Ä–µ–¥–∏ –¥–∞ –ø—Ä–æ–¥—ä–ª–∂–∏—Ç–µ."
  exit 1
fi

# –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –±–∞–∑–æ–≤–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
mkdir -p frontend && cd frontend

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–∞–Ω–µ –Ω–∞ Vite –ø—Ä–æ–µ–∫—Ç
echo "üõ†Ô∏è –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ Vite + React + TypeScript –ø—Ä–æ–µ–∫—Ç..."
npm create vite@latest . -- --template react-ts

# –ò–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–µ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üì¶ –ò–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–µ –Ω–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
npm install
npm install axios tailwindcss postcss autoprefixer @types/node --save
npm install -D @vitejs/plugin-react eslint vite-tsconfig-paths

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–∞–Ω–µ –Ω–∞ Tailwind CSS
echo "üé® –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–∞–Ω–µ –Ω–∞ Tailwind CSS..."
npx tailwindcss init -p

# –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
echo "üìÇ –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ —Ñ–∞–π–ª–æ–≤–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞..."
mkdir -p src/{components,hooks,pages,styles,assets}

# –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–∏ —Ñ–∞–π–ª–æ–≤–µ
echo "‚öôÔ∏è –ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–∏ —Ñ–∞–π–ª–æ–≤–µ..."

# Vite config
cat > vite.config.ts <<EOL
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'
import path from 'path'

export default defineConfig({
  plugins: [react()],
  resolve: {
    alias: {
      '@': path.resolve(__dirname, './src'),
    },
  },
  server: {
    proxy: {
      '/api': {
        target: 'http://localhost:8000',
        changeOrigin: true,
      },
    },
  },
})
EOL

# Tailwind config
cat > tailwind.config.js <<EOL
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./index.html",
    "./src/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}
EOL

# –û—Å–Ω–æ–≤–µ–Ω CSS —Ñ–∞–π–ª
cat > src/styles/main.css <<EOL
@tailwind base;
@tailwind components;
@tailwind utilities;
EOL

# App –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
cat > src/App.tsx <<EOL
import { useState } from 'react'
import { useRecipes } from '@/hooks/useRecipes'

function App() {
  const [ingredients, setIngredients] = useState<string[]>([])

  return (
    <div className="min-h-screen bg-gray-100 p-8">
      <h1 className="text-3xl font-bold text-center mb-8">AI –ì–æ—Ç–≤–∞—á</h1>
      {/* –î–æ–±–∞–≤–µ—Ç–µ –≤–∞—à–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ç—É–∫ */}
    </div>
  )
}

export default App
EOL

# useRecipes hook
cat > src/hooks/useRecipes.ts <<EOL
import axios from 'axios'
import { useState } from 'react'

export const useRecipes = () => {
  const [recipes, setRecipes] = useState<string[]>([])

  const generateRecipes = async (ingredients: string[]) => {
    try {
      const response = await axios.post('/api/generate', {
        ingredients
      })
      setRecipes(response.data.recipes)
    } catch (error) {
      console.error('–ì—Ä–µ—à–∫–∞:', error)
    }
  }

  return { recipes, generateRecipes }
}
EOL

# TypeScript –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏
cat > src/vite-env.d.ts <<EOL
/// <reference types="vite/client" />

interface ImportMetaEnv {
  readonly VITE_API_BASE_URL: string
}

interface ImportMeta {
  readonly env: ImportMetaEnv
}
EOL

# –ò–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–µ –∏ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ
echo "üöÄ –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–µ–Ω —Å—ä—Ä–≤—ä—Ä..."
npm run dev

echo "‚úÖ –ì–æ—Ç–æ–≤–æ! Vite –ø—Ä–æ–µ–∫—Ç—ä—Ç –µ —Å—ä–∑–¥–∞–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ."
echo "‚û°Ô∏è –î–æ—Å—Ç—É–ø–µ–Ω –Ω–∞: http://localhost:5173"